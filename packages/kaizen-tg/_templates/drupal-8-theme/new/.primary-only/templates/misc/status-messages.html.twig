---
to: "<%= type==='primary' ? `${h.src()}/${h.changeCase.lower(name)}/templates/misc/status-messages.html.twig` : null %>"
---
{#
/**
 * @file
 * Theme override for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}
<div data-drupal-messages>
  {% block messages %}
    {% for type, messages in message_list %}
      {%
        set classes = [
          'messages',
          'messages--' ~ type,
        ]
      %}
      <div role="contentinfo" aria-label="{{ status_headings[type] }}" {{ attributes.addClass(classes)|without('role', 'aria-label') }}>
        <div class="layout-container">
          <div class="messages__content">
            <div class="messages__icon-container messages__icon-container--left">
              {% if type == 'error' %}
                <svg aria-hidden="true" class="messages__icon messages__icon--error">
                  <use xlink:href="{{ <%= h.src() %>/<%= h.changeCase.lower(name) %>_svg_sprite_path }}#svg-smile-sad"></use>
                </svg>
              {% endif %}
              {% if type == 'warning' %}
                <svg aria-hidden="true" class="messages__icon messages__icon--warning">
                  <use xlink:href="{{ <%= h.src() %>/<%= h.changeCase.lower(name) %>_svg_sprite_path }}#svg-smile-straight"></use>
                </svg>
              {% endif %}
              {% if type == 'status' %}
                <svg aria-hidden="true" class="messages__icon messages__icon--success">
                  <use xlink:href="{{ <%= h.src() %>/<%= h.changeCase.lower(name) %>_svg_sprite_path }}#svg-smile-happy"></use>
                </svg>
              {% endif %}
            </div>
            <div class="messages__text">
              {% if status_headings[type] %}
                <h2 class="visually-hidden">{{ status_headings[type] }}</h2>
              {% endif %}
              {% if messages|length > 1 %}
                <ul class="messages__list">
                  {% for message in messages %}
                    <li class="messages__item">{{ message }}</li>
                  {% endfor %}
                </ul>
              {% else %}
                {{ messages|first }}
              {% endif %}
            </div>
            <div class="messages__icon-container messages__icon-container--right messages__icon-container--clickable messages__close-icon" tabindex="0" role="button" aria-label="{{ 'Close message' | t }}">
              <svg aria-hidden="true" class="messages__icon messages__icon--bigger messages__icon--close">
                <use xlink:href="{{ <%= h.src() %>/<%= h.changeCase.lower(name) %>_svg_sprite_path }}#svg-close"></use>
              </svg>
            </div>
          </div>
        </div>
      </div>
      {# Remove type specific classes. #}
      {% set attributes = attributes.removeClass(classes) %}
    {% endfor %}
  {% endblock messages %}
</div>
